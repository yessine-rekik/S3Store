name: Reusable Pipeline

on:
  workflow_call:
    inputs:
      service-folder:
        required: true
        type: string

    secrets:
      DOCKER_USERNAME:
        required: true

      DOCKER_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t test-image ./${{ inputs.service-folder }}

  test:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: cd ${{ inputs.service-folder }} && npm install

      - name: Run ESLint
        run: cd ${{ inputs.service-folder }} && npm run lint

      - name: Run Test Suites
        run: cd ${{ inputs.service-folder }} && npm run test:ci

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=$(case ${{ github.ref_name }} in
          master) echo prod-${{ github.sha:0:7 }} ;;
          staging) echo staging-${{ github.sha:0:7 }} ;;
          dev) echo dev-${{ github.sha:0:7 }} ;;
          esac)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ inputs.service-folder }}:${{ env.IMAGE_TAG }} ./${{ inputs.service-folder }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.service-folder }}:${{ env.IMAGE_TAG }}
